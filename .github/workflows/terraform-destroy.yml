name: 'Terraform Destroy'

on:
  workflow_dispatch:
    inputs:
      auto_approve:
        description: 'Auto approve the destroy operation'
        required: true
        default: true
        type: boolean

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init
      working-directory: ./terraform-eks/example

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
      working-directory: ./terraform-eks/example

    - name: Terraform Plan
      id: plan
      if: github.event.inputs.auto_approve == 'false'
      run: terraform plan -no-color
      working-directory: ./terraform-eks/example
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v7
      if: github.event.inputs.auto_approve == 'false'
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: output
          })

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve
      working-directory: ./terraform-eks/example 